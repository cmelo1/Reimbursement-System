--Drop all tables--
DROP TABLE ers_reimbursement;
DROP TABLE ERS_USERS;
DROP TABLE ers_reimbursement_status;
DROP TABLE ers_reimbursement_type;
DROP TABLE ers_reimbursement_roles;

CREATE TABLE ERS_REIMBURSEMENT_STATUS(
REIMB_STATUS_ID INT PRIMARY KEY,
REIMB_STATUS VARCHAR2(10));

CREATE TABLE ERS_REIMBURSEMENT_TYPE(
REIMB_TYPE_ID INT PRIMARY KEY,
REIMB_TYPE VARCHAR2(10));

CREATE TABLE ERS_REIMBURSEMENT_ROLES(
ERS_USER_ROLE_ID INT PRIMARY KEY,
USER_ROLE VARCHAR2(20)
);

CREATE TABLE ERS_USERS(
ERS_USER_ID INT PRIMARY KEY,
ERS_USERNAME VARCHAR2(50) UNIQUE,
ERS_PASSWORD VARCHAR2(50),
ERS_FIRST_NAME VARCHAR(100),
ERS_LAST_NAME VARCHAR(100),
ERS_EMAIL VARCHAR(150) UNIQUE,
USER_ROLE_ID NUMBER,
CONSTRAINT FK_USER_ROLE FOREIGN KEY (USER_ROLE_ID) REFERENCES
ERS_REIMBURSEMENT_ROLES(ERS_USER_ROLE_ID)
);

--TRIGGER-- 
CREATE TRIGGER user_id_trig
ON ERS_USERS
BEFORE INSERT
AS
BEGIN 
SET ERS_USERID = user_sequence.nextval
END
/

--SEQUENCES--

CREATE SEQUENCE reimb_sequence
START WITH 10000
INCREMENT by 10;

CREATE SEQUENCE status_sequence
start with 100
increment by 1;

CREATE SEQUENCE type_sequence
START WITH 100
INCREMENT by 1;

CREATE SEQUENCE user_sequence
START WITH 1000
INCREMENT BY 100;

CREATE SEQUENCE role_sequence
START WITH 1000
INCREMENT BY 100;


INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES (STATUS_SEQUENCE.nextval,'PENDING');
INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES (STATUS_SEQUENCE.nextval,'APPROVED');
INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES (STATUS_SEQUENCE.nextval,'DENIED');


INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (TYPE_SEQUENCE.nextval,'LODGING');
INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (TYPE_SEQUENCE.nextval,'TRAVEL');
INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (TYPE_SEQUENCE.nextval,'FOOD');
INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (TYPE_SEQUENCE.nextval,'OTHER');

INSERT INTO ers_reimbursement_roles VALUES (ROLE_SEQUENCE.nextval,'Employee');
INSERT INTO ers_reimbursement_roles VALUES (ROLE_SEQUENCE.nextval,'Finance Manager');

INSERT INTO ERS_USERS VALUES(
user_sequence.nextval,'worker','1234','John','Doe','johndoe@gmail.com',
1000);

INSERT INTO ERS_USERS VALUES(
user_sequence.nextval,'worker1','1234','Jane','Doe','janedoe@gmail.com',
1000);

INSERT INTO ERS_USERS VALUES(
user_sequence.nextval,'worker2','1234','Johnny','Deer',
'johnnydeer@gmail.com',
1000);

INSERT INTO ERS_USERS VALUES(
user_sequence.nextval,'boss','1234','Robert','Kingsley','robkings@gmail.com',
1100);



--NO TRIGGERS YET--
--Maybe triggers on insert I guess.--



--Last table to get created bc of all the foreign key dependencies --
CREATE TABLE ERS_REIMBURSEMENT(
REIMB_ID NUMBER PRIMARY KEY,
REIMB_AMOUNT NUMBER,
REIMB_SUBMITTED TIMESTAMP,
REIMB_DESCRIPTION VARCHAR2(250),
REIM_RECEIPT BLOB,

REIMB_AUTHOR NUMBER,
REIMB_RESOLVER NUMBER,
REIMB_STATUS_ID NUMBER,
REIMB_TYPE_ID NUMBER,
CONSTRAINT FK_AUTHOR FOREIGN KEY (REIMB_AUTHOR) REFERENCES
ERS_USERS(ERS_USER_ID),

CONSTRAINT FK_RESOLVER FOREIGN KEY (REIMB_RESOLVER) REFERENCES
ERS_USERS(ERS_USER_ID),

CONSTRAINT FK_STATUS_ID FOREIGN KEY (REIMB_STATUS_ID) REFERENCES
ERS_REIMBURSEMENT_STATUS(REIMB_STATUS_ID),

CONSTRAINT FK_NUTYPE_ID FOREIGN KEY (REIMB_TYPE_ID) REFERENCES
ERS_REIMBURSEMENT_TYPE(REIMB_TYPE_ID)
);




